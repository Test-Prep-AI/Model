name: Docker Image CI
on: push
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: Test-Prep-AI/Model
  VERSION: 1.1.1
jobs:
  build:
    if: github.repository_owner == 'Test-Prep-AI' && github.ref == 'refs/heads/main'
    name: Build and Test
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest
      - name: Lint with flake8
        run: |
          pip install flake8
          # syntax 에러 체크, 있으면 에러코드 1 반환
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # 에러 모드 warning으로 치부
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  package:
    name: Package and Publish
    if: github.repository_owner == 'Test-Prep-AI' && github.ref == 'refs/heads/main'
    needs: [ build ]
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      
      - name: Prepare image name
        id: prep
        run: |
          IMAGE_NAME_LOWER=$(echo ${{ env.IMAGE_NAME }} | tr '[:upper:]' '[:lower:]')
          echo "IMAGE_NAME_LOWER=${IMAGE_NAME_LOWER}" >> $GITHUB_ENV
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Build container image
        uses: docker/build-push-action@v4
        with:
          context: .
          load: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LOWER }}:${{ env.VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Log into container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Publish container image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LOWER }}:${{ env.VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max